---
- hosts: firewalls
  connection: local

  vars:
    backup_config: true
    backup_filename: 'ansible-backup-{{ ansible_date_time.date }}.xml'
    upgrade_content: true
    download_base_version: true
    restart_when_complete: true
    base_version: '9.0.0'
    target_version: '9.0.3-h3'

  roles:
    - PaloAltoNetworks.paloaltonetworks

  tasks:
    - name: Backup device config
      panos_op:
        provider: '{{ provider }}'
        cmd: 'save config to {{ backup_filename }}'
      when: backup_config

    - name: Download latest content
      panos_op:
        provider: '{{ provider }}'
        cmd: 'request content upgrade download latest'
      register: content_download
      when: upgrade_content

    - name: Poll for content download job completion
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show jobs id {{ (content_download.stdout | from_json).response.result.job }}'
      register: content_download_job
      retries: 5
      delay: 10
      when: upgrade_content and content_download is not failed
      until: ( content_download_job.stdout | from_json ).response.result.job.result == 'OK'

    - name: Install latest content
      panos_op:
        provider: '{{ provider }}'
        cmd: 'request content upgrade install version latest'
      register: content_install
      when: upgrade_content

    - name: Poll for content install job completion
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show jobs id {{ (content_install.stdout | from_json).response.result.job }}'
      register: content_install_job
      retries: 10
      delay: 30
      when: upgrade_content and content_install is not failed
      until: ( content_install_job.stdout | from_json).response.result.job.result == 'OK'

    - name: Download base PAN-OS version
      panos_op:
        provider: '{{ provider }}'
        cmd: 'request system software download version {{ base_version }}'
      register: base_download
      when: download_base_version

    - name: Poll for base PAN-OS version download
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show jobs id {{ (base_download.stdout | from_json).response.result.job }}'
      register: base_download_job
      retries: 10
      delay: 30
      when: download_base_version and base_download is not failed
      until: ( base_download_job.stdout | from_json).response.result.job.result == 'OK'

    - name: Install target PAN-OS version
      panos_software:
        provider: '{{ provider }}'
        version: '{{ target_version }}'
        restart: '{{ restart_when_complete }}'

    - pause:
        seconds: 30
      when: restart_when_complete

    - name: Check to see if device is ready
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show chassis-ready'
      changed_when: False
      register: result
      when: restart_when_complete
      until: result is not failed and (result.stdout | from_json).response.result == 'yes'
      retries: 50
      delay: 30
